# =================== LISTAS PARALELAS ===================

# Productos
productosId = ["id0", "id1", "id2", "id3"]
productosNombre = ["Remera Algod√≥n", "Pantal√≥n Jean", "Consola PS5", "Auriculares BT"]
productosCategoria = ["Vestimenta", "Vestimenta", "Tecnolog√≠a", "Tecnolog√≠a"]
productosPrecio = [15.00, 45.00, 499.99, 75.50]
productosStock = [50, 30, 10, 40]
productosVendidos = [0, 0, 0, 0]
productosRecaudacion = [0, 0, 0, 0]

# Compras
comprasId = []
comprasDni = []
comprasProductoId = []
comprasCantidad = []
comprasTotal = []
comprasMedioPago = []

# Clientes
clienteDni = []
clienteRecaudacion = []
clienteCompras = []

# Cupones
cuponesCodigo = ["6852", "4182", "2186", "5742"]
cuponesDescuento = [15, 25, 30, 40]

# =================== FUNCIONES  ===================
def verEstadisticas():
    #Pantalla inicial con opciones
    print("================================================================")
    print("- - - - - üìà ESTAD√çSTICAS DE VENTAS üìä - - - - -")
    print("[0] Volver")
    print("[1] Facturaci√≥n total")
    print("[2] Facturaci√≥n por producto")
    print("[3] Cliente con mayor compra")
    opcionNum = input("Seleccione una opci√≥n: ")

    #Mostrar estadistica de acuerdo a numero seleccionado
    if opcionNum == "0":
        return
    print("================================================================")
    if opcionNum == "1":
        dineroTotal = 0
        for producto in productosRecaudacion:
            dineroTotal += producto
        print(f"Facturaci√≥n total: ${dineroTotal}")
        print("================================================================")
        input("Presione Enter para continuar...")
        return verEstadisticas()
    elif opcionNum == "2":
        print("Facturaci√≥n total por producto (Ordenado por Facturaci√≥n):")
        for i in range(len(productosId)):
            print(f"- {productosNombre[i]} ({productosId[i]}): ${productosRecaudacion[i]}")
        print("================================================================")
        input("Presione Enter para continuar...")
        return verEstadisticas()
    elif opcionNum == "3":
        dniCompraMax = comprasDni[0]
        cantCompraMax = comprasTotal[0]
        for i in range(len(comprasId)):
            if comprasTotal[i] > cantCompraMax:
                cantCompraMax = comprasTotal[i]
                dniCompraMax = comprasDni[i]
        print("Cliente con la compra m√°s alta:")
        print(f"- DNI: {dniCompraMax}")
        print(f"- Total de la compra: ${cantCompraMax}")
        print("================================================================")
        input("Presione Enter para continuar...")
        return verEstadisticas()

def verEstadisticaProducto():
    #Pantalla inicial con productos
    print("================================================================")
    print("- - - - - üìà ESTAD√çSTICAS POR PRODUCTO üìä - - - - -")
    print("[0] Volver")
    for i in range(len(productosId)):
        print(f"[{i+1}] {productosNombre[i]} ({productosId[i]})")
    productoNum = int(input("Seleccione un producto: ")) - 1

    #Si presiona 0 salir de funcion
    if productoNum == (-1):
        return
    
    print("================================================================")
    
    #Segunda pantalla con estad√≠sticas para producto seleccionado
    print(f"- - - - - Estad√≠sticas para {productosNombre[productoNum]} - - - - -")
    print(f"Facturaci√≥n total: ${productosRecaudacion[productoNum]}")
    print(f"Cantidad de compras: {productosVendidos[productoNum]}")
    print("================================================================")
    input("Presione Enter para continuar...")
    return verEstadisticaProducto()
    
def verEstadisticaCliente():
    #Pantalla inicial con clientes
    print("================================================================")
    print("- - - - - üìà VENTAS POR CLIENTE üìä - - - - -")
    print("[0] Volver")
    for i in range(len(clienteDni)):
        print(f"[{i+1}] {clienteDni[i]}")
    clienteNum = int(input("Seleccione un cliente: ")) - 1

    #Si presiona 0 salir de funcion
    if clienteNum == (-1):
        return
    
    dniSelect = clienteDni[clienteNum]
    print("================================================================")
    
    #Segunda pantalla con estad√≠sticas de todas las compras, filtrado por el cliente seleccionado
    print(f"- - - - - Cliente ({dniSelect}) - - - - -")
    print(f"Pagos totales: ${clienteRecaudacion[clienteNum]}")
    print(f"Cantidad de compras: {clienteCompras[clienteNum]}")
    print("\nProductos comprados:")
    for i in range(len(comprasId)):
        if comprasDni[i] == dniSelect:
            print(f"- Producto: {comprasProductoId[i]} | Cantidad comprado: {comprasCantidad[i]} | Total Facturado: ${comprasTotal[i]} | Tipo de Pago: {comprasMedioPago[i]}")
    print("================================================================")
    input("Presione Enter para continuar...")
    return verEstadisticaCliente()

def gestionarStock(producto):
    print("================================================================")
    print(f"-----AJUSTANDO STOCK {productosNombre[producto]} ({productosStock[producto]})-------")
    ajusteStock=int(input("Ingrese un n√∫mero positivo para sumar stock y uno negativo para restar: "))
    nuevoStock= productosStock[producto] + ajusteStock
    if nuevoStock < 0:
        print("‚õù       Cambio no realizado       ‚õù ")
        print("================================================================")
        print("X---X---X---EL STOCK DEL PRODUCTO NO PUEDE SER NEGATIVO---X---X---X")
        print("================================================================")
        input("Presione Enter para continuar...")
        return gestionarStock()
    else:
        productosStock[producto]=nuevoStock
        print("================================================================")
        print(f"Nuevo Stock de {productosNombre[producto]} | Stock actualizado: {productosStock[producto]}")
        print("‚òë    CAMBIO REALIZADO CORRECTAMENTE    ‚òë")
        print("================================================================")
        input("Presione Enter para continuar...")
        return gestionarProductos()
    
def gestionarPrecio(producto):
    print("================================================================")
    print(f"-----AJUSTANDO PRECIO {productosNombre[producto]} (${productosPrecio[producto]})-------")
    ajustePrecio=int(input("Ingrese el nuevo precio del producto: $"))
    if ajustePrecio<=0:
        print("================================================================")
        print("X---X---X---EL PRECIO DEL PRODUCTO NO PUEDE SER NEGATIVO---X---X---X")
        print("‚õù       Cambio no realizado       ‚õù ")
        print("================================================================")
        input("Presione Enter para continuar...")
        return gestionarPrecio()
    else:    
        productosPrecio[producto]=ajustePrecio
        print("================================================================")
        print(f"Nuevo Precio de {productosNombre[producto]} | Precio actualizado: ${productosPrecio[producto]}")
        print("‚òë    CAMBIO REALIZADO CORRECTAMENTE    ‚òë")
        print("================================================================")
        input("Presione Enter para continuar...")
        return gestionarProductos()

def gestionarProductos():
    print("================================================================")
    print("--- GESTI√ìN DE INVENTARIO Y PRECIOS ---")
    
    print("[0] Volver")
    for i in range(len(productosNombre)):
        print(f"[{i+1}] {productosNombre[i]} | Precio: ${productosPrecio[i]} | Stock: {productosStock[i]}")
     
    opcion=int(input("Seleccione el producto a modificar: "))
    
    if opcion == 0:
        return
    elif opcion > len(productosNombre):
        print("================================================================")
        print("‚õù OPCION NO VALIDA ‚õù")
        print("================================================================")
        input("Presione Enter para continuar...")
        return gestionarProductos()
    else:
        opcion = opcion-1
        print("================================================================")
        print('\033[1m\033[4m' f"Edici√≥n del producto: {productosNombre[opcion]} | Stock: {productosStock[opcion]} | Precio: {productosPrecio[opcion]}" '\033[0m')
        print("[0] Volver")
        print("[1] Modificar Stock")
        print("[2] Modificar Precio")
        ajuste=int(input("Ingrese el ajuste deseado: "))
       
        if ajuste == 0:
            return gestionarProductos()
        elif ajuste == 1:
            gestionarStock(opcion)
        elif ajuste == 2:
            gestionarPrecio(opcion)
        else:
            print("================================================================")
            print("‚õù OPCION NO VALIDA ‚õù")
            print("================================================================")
            input("Presione Enter para continuar...")
            return gestionarProductos()

def salir():
    """Funci√≥n para salir del programa con confirmaci√≥n del usuario"""
    print("================================================================")
    print("- - - - -‚ùå Salir ‚ùå- - - - -")
    print("¬øEst√° seguro que quiere salir (S/N)?: ", end="")
    
    confirmacion = input().upper()
    
    if confirmacion == 'S' or confirmacion == 'SI':
        print("\n================================================================")
        print("Exit‚¶ø")
        print("¬°Gracias por visitar nuestra tienda! üëã")
        print("================================================================")
        return True
    else:
        print("\n‚úÖ Regresando al men√∫ principal...")
        input("Presione Enter para continuar...")
        return False

def mostrarMenu():
    """Funci√≥n que muestra el men√∫ principal y gestiona la navegaci√≥n"""
    while True:
        print("================================================================")
        print("E-Commerce‚¶ø")
        print("================================================================")
        print("Bienvenido a la tienda virtual üè™")
        print("[1] Comprar üí≤")
        print("[2] Ver estad√≠sticas totales üìà")
        print("[3] Ver estad√≠sticas por producto üìä")
        print("[4] Ver estad√≠sticas por cliente üôã")
        print("[5] Gestionar Productos üì¶")
        print("[6] Cupones üéüÔ∏è")
        print("[7] Salir ‚ùå")
        print("Seleccione opci√≥n: ", end="")
        
        opcion = input()

        if opcion == "1":
            print("\n[Funci√≥n Comprar - En desarrollo]")
            input("Presione Enter para continuar...")
        elif opcion == "2":
            verEstadisticas()
        elif opcion == "3":
            verEstadisticaProducto()
        elif opcion == "4":
            verEstadisticaCliente()
        elif opcion == "5":
            gestionarProductos()
        elif opcion == "6":
            print("\n[Funci√≥n Cupones - En desarrollo]")
            input("Presione Enter para continuar...")
        elif opcion == "7":
            if salir():
                break
        else:
            print("\n‚ùå Opci√≥n inv√°lida. Por favor, seleccione una opci√≥n del 1 al 7.")
            input("Presione Enter para continuar...")

# =================== PROGRAMA PRINCIPAL ===================

print("Iniciando E-Commerce...")
mostrarMenu()